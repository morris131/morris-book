@startuml

title 抽象工厂模式类图

interface AbstractProductA
interface AbstractProductB

class ConcreteProductA1
class ConcreteProductA2
class ConcreteProductB1
class ConcreteProductB2

ConcreteProductA1 ..|> AbstractProductA
ConcreteProductA2 ..|> AbstractProductA
ConcreteProductB1 ..|> AbstractProductB
ConcreteProductB2 ..|> AbstractProductB

interface Factory {
    AbstractProductA createProductA()
    AbstractProductB createProductB()
}

class ConcreteFactory1 {
    AbstractProductA createProductA()
    AbstractProductB createProductB()
}

note top of ConcreteFactory1
    public AbstractProductA createProductA() {
        return new ConcreteProductA1();
    }
    public AbstractProductB createProductB() {
        return new ConcreteProductB1();
    }
end note

note top of ConcreteFactory2
    public AbstractProductA createProductA() {
        return new ConcreteProductA2();
    }
    public AbstractProductB createProductB() {
        return new ConcreteProductB2();
    }
end note

class ConcreteFactory2 {
    AbstractProductA createProductA()
    AbstractProductB createProductB()
}

ConcreteFactory1 ..|> Factory
ConcreteFactory2 ..|> Factory

ConcreteFactory1 ..> ConcreteProductA1
ConcreteFactory1 ..> ConcreteProductB1
ConcreteFactory2 ..> ConcreteProductA2
ConcreteFactory2 ..> ConcreteProductB2

class Client

Client ..>  AbstractProductA
Client ..>  AbstractProductB
Client ..>  Factory

@enduml